import{_ as n,H as p,c as i,o,j as e,aN as l,a as s,p as c,s as d}from"./chunks/framework.DogoNsEl.js";const C=JSON.parse('{"title":"docker指令","description":"完整的安装,配置docker确保服务器能够正常的使用docker","frontmatter":{"title":"docker指令","date":"2025-03-07T01:16:28.000Z","permalink":"/articles/server/docker/01","categories":["服务端"],"tags":["docker"],"titleTag":"文档","sidebar":true,"article":true,"comment":true,"description":"完整的安装,配置docker确保服务器能够正常的使用docker","coverImg":"https://github.com/matrix-johnjohn/kimo-docs/blob/main/images/articles/server/docker/01docker.png?raw=true","docAnalysis":true,"inCatalogue":true,"autoTitle":true,"articleUpdate":true,"inHomePost":true},"headers":[],"relativePath":"articles/server/docker/01.Docker指令.md","filePath":"articles/server/docker/01.Docker指令.md"}'),r={name:"articles/server/docker/01.Docker指令.md"},h={id:"docker指令-文档",tabindex:"-1"};function g(u,a,k,b,v,m){const t=p("TkTitleTag");return o(),i("div",null,[e("h1",h,[a[1]||(a[1]=s("docker指令 ",-1)),c(t,{size:"large"},{default:d(()=>[...a[0]||(a[0]=[s("文档",-1)])]),_:1}),a[2]||(a[2]=s()),a[3]||(a[3]=e("a",{class:"header-anchor",href:"#docker指令-文档","aria-label":'Permalink to "docker指令 <TkTitleTag size="large">文档</TkTitleTag>"'},"​",-1))]),a[4]||(a[4]=l(`<h2 id="docker服务设置" tabindex="-1">Docker服务设置 <a class="header-anchor" href="#docker服务设置" aria-label="Permalink to &quot;Docker服务设置&quot;">​</a></h2><p>启动Docker服务</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>systemctl start docker</span></span></code></pre></div><p>停止Docker服务</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>systemctl stop docker</span></span></code></pre></div><p>重启Docker服务</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>systemctl restart docker</span></span></code></pre></div><p>设置Docker开机自启</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>systemctl enable docker</span></span></code></pre></div><h2 id="docker容器" tabindex="-1">Docker容器 <a class="header-anchor" href="#docker容器" aria-label="Permalink to &quot;Docker容器&quot;">​</a></h2><h4 id="启动新容器" tabindex="-1">启动新容器 <a class="header-anchor" href="#启动新容器" aria-label="Permalink to &quot;启动新容器&quot;">​</a></h4><blockquote><p>-d:后台运行容器;</p><p>-p:端口映射</p><p>-e:环境变量</p><p>-v:数据卷挂载</p><p>--restart:重启策略(--restart no,always,unless-stopped,on-failure)</p><p>--network:网络连接</p><p>--memory:限制容器内存</p></blockquote><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker run -d \\</span></span>
<span class="line"><span>  --name minio \\</span></span>
<span class="line"><span>  -p 9000:9000 \\</span></span>
<span class="line"><span>  -p 9001:9001 \\</span></span>
<span class="line"><span>  -e &quot;MINIO_ROOT_USER=admin&quot; \\</span></span>
<span class="line"><span>  -e &quot;MINIO_ROOT_PASSWORD=jillleeismyhost&quot; \\</span></span>
<span class="line"><span>  -v /mnt/minio/data:/data \\</span></span>
<span class="line"><span>  -v /mnt/minio/config:/root/.minio \\</span></span>
<span class="line"><span>  --restart unless-stopped \\</span></span>
<span class="line"><span>  minio/minio:RELEASE.2025-04-22T22-12-26Z \\</span></span>
<span class="line"><span>  server /data --console-address &quot;:9001&quot;</span></span></code></pre></div><h3 id="容器操作" tabindex="-1">容器操作 <a class="header-anchor" href="#容器操作" aria-label="Permalink to &quot;容器操作&quot;">​</a></h3><p>Docker开启容器</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker start &lt;指定容器&gt;</span></span></code></pre></div><p>Docker停止容器</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker stop &lt;指定容器&gt;</span></span></code></pre></div><p>Docker删除容器</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker rm &lt;指定容器&gt;</span></span></code></pre></div><p>Docker查看容器日志</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker logs &lt;指定容器&gt;</span></span></code></pre></div><p>查看 Docker 容器网络配置信息</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker inspect &lt;指定容器&gt;</span></span></code></pre></div><p>进入Docker容器</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker exec -it &lt;指定容器&gt; bash</span></span></code></pre></div><h2 id="docker镜像" tabindex="-1">Docker镜像 <a class="header-anchor" href="#docker镜像" aria-label="Permalink to &quot;Docker镜像&quot;">​</a></h2><p>拉取镜像</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker pull &lt;image:version tag&gt;</span></span></code></pre></div><p>删除镜像</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker rmi &lt;image:version tag&gt;</span></span></code></pre></div><p>将镜像保存到本地</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker save -o &lt;文件名.tar&gt; &lt;image:version tag&gt;</span></span></code></pre></div><p>将本地镜像上传到本地仓库</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker load -i &lt;文件名.tar&gt;</span></span></code></pre></div><h2 id="docker数据卷" tabindex="-1">Docker数据卷 <a class="header-anchor" href="#docker数据卷" aria-label="Permalink to &quot;Docker数据卷&quot;">​</a></h2><p>查看所有数据卷</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker volume ls</span></span></code></pre></div><p>查看数据卷挂载点</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker volume inspect &lt;指定数据卷&gt;</span></span></code></pre></div><p>删除数据卷</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker volume rm &lt;指定数据卷&gt;</span></span></code></pre></div><h2 id="docker网络" tabindex="-1">Docker网络 <a class="header-anchor" href="#docker网络" aria-label="Permalink to &quot;Docker网络&quot;">​</a></h2><p>查看 Docker 容器网络配置信息</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Docker inspect &lt;指定容器&gt;</span></span></code></pre></div><p>创建网络</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker network create &lt;网络名&gt;</span></span></code></pre></div><p>网络列表</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker network ls</span></span></code></pre></div><p>容器链接网络</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker network connect &lt;network&gt; &lt;container&gt;</span></span></code></pre></div><p>删除网络</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker network rm &lt;network&gt;</span></span></code></pre></div><h2 id="构建镜像" tabindex="-1">构建镜像 <a class="header-anchor" href="#构建镜像" aria-label="Permalink to &quot;构建镜像&quot;">​</a></h2><p>Dockerfile指令</p><table tabindex="0"><thead><tr><th><strong>指令</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td><strong>FROM</strong></td><td>指定基础镜像</td></tr><tr><td><strong>ENV</strong></td><td>设置环境变量，可在后面指令使用</td></tr><tr><td><strong>COPY</strong></td><td>拷贝本地文件到镜像的指定目录</td></tr><tr><td><strong>RUN</strong></td><td>执行Linux的shell命令，一般是安装过程的命令</td></tr><tr><td><strong>EXPOSE</strong></td><td>指定容器运行时监听的端口，是给镜像使用者看的</td></tr><tr><td><strong>ENTRYPOINT</strong></td><td>镜像中应用的启动命令，容器运行时调用</td></tr></tbody></table><p>Dockerfile文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 使用官方 OpenJDK 镜像作为基础镜像</span></span>
<span class="line"><span>FROM openjdk:17-jre-slim</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 设置工作目录</span></span>
<span class="line"><span>WORKDIR /app</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 将本地 app 文件夹中的 JAR 包复制到容器中</span></span>
<span class="line"><span>COPY /app/app.jar ./app.jar</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 暴露应用运行的端口（例如 Spring Boot 默认 8080）</span></span>
<span class="line"><span>EXPOSE 8080</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 容器启动时运行 JAR 包</span></span>
<span class="line"><span>ENTRYPOINT [&quot;java&quot;, &quot;-jar&quot;, &quot;app.jar&quot;]</span></span></code></pre></div><p>构建镜像</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker build -t &lt;container&gt; .</span></span></code></pre></div>`,60))])}const x=n(r,[["render",g]]);export{C as __pageData,x as default};
