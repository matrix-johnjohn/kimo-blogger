import{_ as t,H as n,c as l,o as r,j as i,aN as h,a,p,s as k}from"./chunks/framework.DogoNsEl.js";const y=JSON.parse('{"title":"c语言基础","description":"完整的安装,配置docker确保服务器能够正常的使用docker","frontmatter":{"title":"c语言基础","date":"2025-03-07T01:16:28.000Z","permalink":"/articles/server/c/basic","categories":["服务端"],"tags":["c"],"titleTag":"底层","sidebar":true,"article":true,"comment":true,"description":"完整的安装,配置docker确保服务器能够正常的使用docker","coverImg":"https://github.com/matrix-johnjohn/kimo-docs/blob/main/images/articles/server/docker/00docker.png?raw=true","docAnalysis":true,"inCatalogue":true,"autoTitle":true,"articleUpdate":true,"inHomePost":true},"headers":[],"relativePath":"articles/server/c/01.c语言基础.md","filePath":"articles/server/c/01.c语言基础.md"}'),d={name:"articles/server/c/01.c语言基础.md"},o={id:"c语言基础-底层",tabindex:"-1"};function c(g,s,F,u,C,b){const e=n("TkTitleTag");return r(),l("div",null,[i("h1",o,[s[1]||(s[1]=a("c语言基础 ",-1)),p(e,{size:"large"},{default:k(()=>[...s[0]||(s[0]=[a("底层",-1)])]),_:1}),s[2]||(s[2]=a()),s[3]||(s[3]=i("a",{class:"header-anchor",href:"#c语言基础-底层","aria-label":'Permalink to "c语言基础 <TkTitleTag size="large">底层</TkTitleTag>"'},"​",-1))]),s[4]||(s[4]=h(`<h2 id="配置-c-环境" tabindex="-1">配置 C++ 环境 <a class="header-anchor" href="#配置-c-环境" aria-label="Permalink to &quot;配置 C++ 环境&quot;">​</a></h2><h3 id="编译器安装" tabindex="-1">编译器安装 <a class="header-anchor" href="#编译器安装" aria-label="Permalink to &quot;编译器安装&quot;">​</a></h3><p>使用apt命令安装编译器集合</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build-essential</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gdb</span></span></code></pre></div><h3 id="cmake安装" tabindex="-1">CMAKE安装 <a class="header-anchor" href="#cmake安装" aria-label="Permalink to &quot;CMAKE安装&quot;">​</a></h3><p>CMake 是一个跨平台的构建工具,用于管理项目的编译过程</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cmake</span></span></code></pre></div><h3 id="版本检查" tabindex="-1">版本检查 <a class="header-anchor" href="#版本检查" aria-label="Permalink to &quot;版本检查&quot;">​</a></h3><p>检查所需依赖的版本</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">g++</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gdb</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span></code></pre></div>`,10))])}const v=t(d,[["render",c]]);export{y as __pageData,v as default};
